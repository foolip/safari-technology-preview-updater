schedules:
- cron: "5 5,11,17,23 * * *"
  displayName: Every six hours
  branches:
    include:
    - master
  always: true

trigger:
  branches:
    include:
    - master

pr:
  branches:
    include:
    - master

jobs:
- job: macOS

  pool:
    vmImage: 'macOS-10.15'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'

  - script: npm install
    displayName: 'npm install'

  # Writes safari-technology-preview.rb and sets 'safari.version' variable:
  - script: node gen-cask.js
    displayName: 'generate cask'

  # Sets 'homebrew.haspr' and 'wpt.haspr' variables if open PRs exist:
  - script: GH_TOKEN=$(github.token) node find-prs.js autofoolip safari-technology-preview-$(safari.version)
    displayName: 'find open PRs'

  - script: HOMEBREW_NO_AUTO_UPDATE=1 brew cask install safari-technology-preview.rb
    displayName: 'brew cask install'
    condition: and(succeeded(), or(not(variables['homebrew.haspr']), not(variables['wpt.haspr'])))

  - script: |
      SAFARIDRIVER_VERSION=`"/Applications/Safari Technology Preview.app/Contents/MacOS/safaridriver" --version`
      echo "$SAFARIDRIVER_VERSION"
      echo "##vso[task.setvariable variable=safaridriver.version]$SAFARIDRIVER_VERSION"
    displayName: 'safaridriver --version'
    condition: and(succeeded(), or(not(variables['homebrew.haspr']), not(variables['wpt.haspr'])))

  # homebrew-specific steps:

  - script: git clone --depth 1 https://github.com/Homebrew/homebrew-cask-versions.git
    displayName: 'homebrew: git clone homebrew-cask-versions'
    condition: and(succeeded(), not(variables['homebrew.haspr']))

  - script: |
      if ! diff homebrew-cask-versions/Casks/safari-technology-preview.rb safari-technology-preview.rb; then
        echo "##vso[task.setvariable variable=homebrew.haschanges]true"
      else
        echo "No changes to safari-technology-preview.rb"
      fi
    displayName: 'homebrew: check for changes'
    condition: and(succeeded(), not(variables['homebrew.haspr']))

  - script: brew cask audit --download safari-technology-preview.rb
    displayName: 'homebrew: brew cask audit'
    condition: and(succeeded(), not(variables['homebrew.haspr']), variables['homebrew.haschanges'])

  - script: brew cask style safari-technology-preview.rb
    displayName: 'homebrew: brew cask style'
    condition: and(succeeded(), not(variables['homebrew.haspr']), variables['homebrew.haschanges'])

  - script: |
      BRANCH=safari-technology-preview-$(safari.version)
      cp safari-technology-preview.rb homebrew-cask-versions/Casks/
      cd homebrew-cask-versions
      git fetch --unshallow
      git checkout -b $BRANCH
      git add -A
      git config user.name "autofoolip"
      git config user.email "auto@foolip.org"
      git commit -F - << EOF
      Update safari-technology-preview to $(safari.version)

      Version as reported by safaridriver --version:
      $(safaridriver.version)

      Source: https://developer.apple.com/safari/download/
      Build: https://dev.azure.com/foolip/safari-technology-preview-updater/_build/results?buildId=$(Build.BuildId)&view=logs
      EOF
      git log -1
      git push https://autofoolip:$(github.token)@github.com/autofoolip/homebrew-cask-versions.git master $BRANCH
    displayName: 'homebrew: push branch'
    condition: |
      and(succeeded(), not(variables['homebrew.haspr']), variables['homebrew.haschanges'],
          eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - script: GH_TOKEN=$(github.token) node create-pr.js Homebrew/homebrew-cask-versions autofoolip:safari-technology-preview-$(safari.version)
    displayName: 'homebrew: create PR'
    condition: |
      and(succeeded(), not(variables['homebrew.haspr']), variables['homebrew.haschanges'],
          eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  # wpt-specific steps:

  - script: git clone --depth 1 https://github.com/web-platform-tests/wpt.git
    displayName: 'wpt: git clone wpt'
    condition: and(succeeded(), not(variables['wpt.haspr']))

  - script: |
      if ! diff wpt/tools/ci/azure/safari-technology-preview.rb safari-technology-preview.rb; then
        echo "##vso[task.setvariable variable=wpt.haschanges]true"
      else
        echo "No changes to safari-technology-preview.rb"
      fi
    displayName: 'wpt: check for changes'
    condition: and(succeeded(), not(variables['wpt.haspr']))

  - script: |
      BRANCH=safari-technology-preview-$(safari.version)
      cp safari-technology-preview.rb wpt/tools/ci/azure/
      cd wpt
      git fetch --unshallow
      git fetch origin epochs/three_hourly
      git checkout -b $BRANCH FETCH_HEAD
      git add -A
      git config user.name "autofoolip"
      git config user.email "auto@foolip.org"
      git commit -F - << EOF
      Update Safari Technology Preview to $(safari.version)

      Version as reported by safaridriver --version:
      $(safaridriver.version)

      Source: https://developer.apple.com/safari/download/
      Build: https://dev.azure.com/foolip/safari-technology-preview-updater/_build/results?buildId=$(Build.BuildId)&view=logs
      EOF
      git log -1
      git push https://autofoolip:$(github.token)@github.com/autofoolip/wpt.git $BRANCH
    displayName: 'wpt: push branch'
    condition: |
      and(succeeded(), not(variables['wpt.haspr']), variables['wpt.haschanges'],
          eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - script: GH_TOKEN=$(github.token) node create-pr.js web-platform-tests/wpt autofoolip:safari-technology-preview-$(safari.version)
    displayName: 'wpt: create PR'
    condition: |
      and(succeeded(), not(variables['wpt.haspr']), variables['wpt.haschanges'],
          eq(variables['Build.SourceBranch'], 'refs/heads/master'))
